/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bmr_main_package;

import java.awt.Color;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Krzysztof
 */
public class WHO_ClassificationForm extends javax.swing.JDialog
{

    /**
     * Creates new form WHO_ClassificationForm
     */
    
    public WHO_ClassificationForm()
    {
        initComponents();
        
        InitWhoTable();
        ExportToScreen();

    }
    
    
    
    private void InitWhoTable()
    {
        // Allignment and color common for entire column
        ColumnRenderer crBlue = new ColumnRenderer(SwingConstants.RIGHT, Color.darkGray);

        for (int i = 0; i < tableWHO.getColumnCount(); i++)
        {
            TableColumn column = tableWHO.getColumnModel().getColumn(i);

            switch ((String) column.getHeaderValue())
            {
                case "WHO":
                    setTableColumnSize(column, 40);
                    // Backgound color depends on color passed as cell value
                    column.setCellRenderer(new ColorCellRenderer());
                    break;
                case "Systolic from":
                case "Diastolic from":
                    setTableColumnSize(column, 90);
                    column.setCellRenderer(crBlue);
                    break;
                default:
                    setTableColumnSize(column, 200);
                    column.setCellRenderer(crBlue);
                    break;
            }
        }
    }
    
    private void setTableColumnSize(TableColumn column, int newSize)
    {
        column.setWidth(newSize);
        column.setPreferredWidth(newSize);
        column.setMaxWidth(newSize);
        column.setMinWidth(newSize / 2);
    }
        
        
    
    // Settings from class members to screen or from screen to class members
    private void ExportToScreen()
    {
  
        DefaultTableModel model = (DefaultTableModel) this.tableWHO.getModel();
        while (model.getRowCount() > 0)
        {
            model.removeRow(0);
        }

        for (Category categoryWHO : CommonDefs.categoriesWHO)
        {
            model.addRow(new Object[]
            {
                categoryWHO.getColorObject(),
                categoryWHO.getName(),
                categoryWHO.getSystolicFrom(),
                categoryWHO.getDiastolicFrom()
            });            
        }      
    }
    
    
    /*
    public WHO_ClassificationForm(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
    }
    */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelWHO = new javax.swing.JPanel();
        paneWHO = new javax.swing.JScrollPane();
        tableWHO = new javax.swing.JTable();
        butOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/bmr_main_package/Icons/heart-beat-icon (64x64).png")).getImage());
        setIconImages(null);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setType(java.awt.Window.Type.UTILITY);

        tableWHO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "WHO", "Description", "Systolic from", "Diastolic from"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tableWHO.getTableHeader().setReorderingAllowed(false);
        paneWHO.setViewportView(tableWHO);

        butOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bmr_main_package/Icons/ok-icon (48x48).png"))); // NOI18N
        butOK.setMaximumSize(new java.awt.Dimension(81, 57));
        butOK.setMinimumSize(new java.awt.Dimension(81, 57));
        butOK.setPreferredSize(new java.awt.Dimension(81, 57));
        butOK.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelWHOLayout = new javax.swing.GroupLayout(panelWHO);
        panelWHO.setLayout(panelWHOLayout);
        panelWHOLayout.setHorizontalGroup(
            panelWHOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWHOLayout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(butOK, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelWHOLayout.createSequentialGroup()
                .addComponent(paneWHO, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelWHOLayout.setVerticalGroup(
            panelWHOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelWHOLayout.createSequentialGroup()
                .addComponent(paneWHO, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butOK, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelWHO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelWHO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butOKActionPerformed
    {//GEN-HEADEREND:event_butOKActionPerformed
        this.dispose();
    }//GEN-LAST:event_butOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butOK;
    private javax.swing.JScrollPane paneWHO;
    private javax.swing.JPanel panelWHO;
    private javax.swing.JTable tableWHO;
    // End of variables declaration//GEN-END:variables
}
