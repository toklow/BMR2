/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bmr_main_package;

import java.awt.Color;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

/**
 *
 * @author Krzysztof
 */
public class MeasureForm extends javax.swing.JDialog
{

    // Class attributes
    private Measure curMeasure = null;
    private boolean dataSaved = false;

    /**
     * Creates new form MeasureForm
     */
    public MeasureForm()
    {
        initComponents();
        MeasuresToScreen(CommonDefs.FIELDS_COPY.DATA_TO_FIELDS);
    }

    public MeasureForm(Measure measure)
    {
        initComponents();
        this.setCurMeasure(measure);
        MeasuresToScreen(CommonDefs.FIELDS_COPY.DATA_TO_FIELDS);
    }

    // Access to class attributes and classs functions
    public void setCurMeasure(Measure measure)
    {
        this.curMeasure = measure;
    }

    public Measure getCurMeasure()
    {
        return this.curMeasure;
    }

    public boolean isSaved()
    {
        return this.dataSaved;
    }

    // Settings from Measures to Screen or from Screen to Measures
    private void MeasuresToScreen(CommonDefs.FIELDS_COPY fieldsCopy)
    {
        if (this.curMeasure == null)
        {
            curMeasure = new Measure(true);
        }

        switch (fieldsCopy)
        {
            case FIELDS_TO_DATA:
                // Screen fields to current measure
                curMeasure.setDate(this.comboDate.getSelectedDate().getTime());
                curMeasure.setHour((Date) this.ftxtHour.getValue());
                
                curMeasure.setSystolic(this.ftxtSys.getText());
                curMeasure.setDiastolic(this.ftxtDia.getText());
                curMeasure.setPulse(this.ftxtPulse.getText());
                curMeasure.setArrhythmia(this.checkArrhythmia.isSelected());

                curMeasure.setGlucose(this.ftxtGlucose.getText());
                curMeasure.setEmptyStomach(this.checkEmptyStomach.isSelected());
                
                curMeasure.setComment(this.areaComment.getText());

                break;

            case DATA_TO_FIELDS:
            case EMPTY_TO_FIELDS:
                dateToComboDate(curMeasure.getDateAsDate());
                this.ftxtHour.setValue(curMeasure.getHourAsDate());

                this.ftxtSys.setText(curMeasure.getSystolic());
                this.ftxtDia.setText(curMeasure.getDiastolic());
                this.ftxtPulse.setText(curMeasure.getPulse());
                this.checkArrhythmia.setSelected(curMeasure.getArrhythmiaAsBoolean());

                this.ftxtGlucose.setText(curMeasure.getGlucose());
                this.checkEmptyStomach.setSelected(curMeasure.getEmptyStomachAsBoolean());
                
                this.areaComment.setText(curMeasure.getComment());
                
                displayCategoryWHO(curMeasure.getSystolic(), curMeasure.getDiastolic());

                /*
                this.ftxtSys.setValue(Integer.parseUnsignedInt(curMeasure.getSystolic()));
                this.ftxtDia.setValue(Integer.parseUnsignedInt(curMeasure.getDiastolic()));
                this.ftxtPulse.setValue(Integer.parseUnsignedInt(curMeasure.getPulse()));

                this.ftxtGlucose.setValue(Integer.parseUnsignedInt(curMeasure.getGlucose()));
                 */
                break;

        }
    }

    private void dateToComboDate(Date date)
    {
        //Date dat = this.localeDateFormat.parse(this.comboDate.getText().trim()); 
        Calendar cal = new GregorianCalendar();
        cal.setTime(date);
        this.comboDate.setSelectedDate(cal);
    }

    private void displayCategoryWHO(String systolic, String diastolic)
    {
        Category category = this.curMeasure.getCategoryWHO(systolic, diastolic);
        
        this.labWHO.setText("Blood pressure WHO classification - " + category.getName());    
        if (category.getId() == "3" || category.getId() == "4" || category.getId() == "5")
        {
           this.labWHO.setForeground(Color.red);
        }
        else
        {
            this.labWHO.setForeground(Color.darkGray);
        }    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        measureDataPanel = new javax.swing.JPanel();
        panelMesTime = new javax.swing.JPanel();
        labDate = new javax.swing.JLabel();
        comboDate = new datechooser.beans.DateChooserCombo();
        labHour = new javax.swing.JLabel();
        ftxtHour = new javax.swing.JFormattedTextField();
        panelPressure = new javax.swing.JPanel();
        labSys = new javax.swing.JLabel();
        labDia = new javax.swing.JLabel();
        labPulse = new javax.swing.JLabel();
        ftxtSys = new javax.swing.JFormattedTextField();
        ftxtDia = new javax.swing.JFormattedTextField();
        ftxtPulse = new javax.swing.JFormattedTextField();
        checkArrhythmia = new javax.swing.JCheckBox();
        labWHO = new javax.swing.JLabel();
        panelGlucose = new javax.swing.JPanel();
        labGlucose = new javax.swing.JLabel();
        ftxtGlucose = new javax.swing.JFormattedTextField();
        checkEmptyStomach = new javax.swing.JCheckBox();
        panelComment = new javax.swing.JPanel();
        scrollComment = new javax.swing.JScrollPane();
        areaComment = new javax.swing.JTextArea();
        measureToolsPanel = new javax.swing.JPanel();
        butSave = new javax.swing.JButton();
        butCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New measure");
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setResizable(false);

        measureDataPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        measureDataPanel.setToolTipText("");

        panelMesTime.setBorder(javax.swing.BorderFactory.createTitledBorder("Measurement time"));

        labDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labDate.setText("Date:");
        labDate.setToolTipText("Measurement date");

        comboDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    comboDate.setCalendarPreferredSize(new java.awt.Dimension(350, 250));
    comboDate.setNothingAllowed(false);
    comboDate.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    labHour.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    labHour.setText("Hour:");
    labHour.setToolTipText("Measurement hour");

    ftxtHour.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
    ftxtHour.setToolTipText("Measurement time (hh:mm)");

    javax.swing.GroupLayout panelMesTimeLayout = new javax.swing.GroupLayout(panelMesTime);
    panelMesTime.setLayout(panelMesTimeLayout);
    panelMesTimeLayout.setHorizontalGroup(
        panelMesTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelMesTimeLayout.createSequentialGroup()
            .addGap(19, 19, 19)
            .addComponent(labDate)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addComponent(labHour)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ftxtHour, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    panelMesTimeLayout.setVerticalGroup(
        panelMesTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelMesTimeLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelMesTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(labDate)
                .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labHour)
                .addComponent(ftxtHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panelPressure.setBorder(javax.swing.BorderFactory.createTitledBorder("Blood pressure and pulse"));

    labSys.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    labSys.setText("Systolic:");
    labSys.setToolTipText("Systolic pressure (higher)");

    labDia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    labDia.setText("Diastolic:");
    labDia.setToolTipText("Diastolic pressure (lower)");

    labPulse.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    labPulse.setText("Pulse:");
    labPulse.setToolTipText("Pulse");

    ftxtSys.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
    ftxtSys.setToolTipText("Systolic pressure (higher)");
    ftxtSys.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
    ftxtSys.addFocusListener(new java.awt.event.FocusAdapter()
    {
        public void focusLost(java.awt.event.FocusEvent evt)
        {
            ftxtSysFocusLost(evt);
        }
    });

    ftxtDia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
    ftxtDia.setToolTipText("Diastolic pressure (lower)");
    ftxtDia.addFocusListener(new java.awt.event.FocusAdapter()
    {
        public void focusLost(java.awt.event.FocusEvent evt)
        {
            ftxtDiaFocusLost(evt);
        }
    });

    ftxtPulse.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
    ftxtPulse.setToolTipText("Pulse");

    checkArrhythmia.setText("Arrhythmia:");
    checkArrhythmia.setToolTipText("Arrhythmia detected");
    checkArrhythmia.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    labWHO.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
    labWHO.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    labWHO.setText("Blood pressure");

    javax.swing.GroupLayout panelPressureLayout = new javax.swing.GroupLayout(panelPressure);
    panelPressure.setLayout(panelPressureLayout);
    panelPressureLayout.setHorizontalGroup(
        panelPressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelPressureLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelPressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(labWHO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPressureLayout.createSequentialGroup()
                    .addComponent(labSys)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(ftxtSys, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addComponent(labDia)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(ftxtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26)
                    .addComponent(labPulse)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(ftxtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(28, 28, 28)
                    .addComponent(checkArrhythmia)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    panelPressureLayout.setVerticalGroup(
        panelPressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelPressureLayout.createSequentialGroup()
            .addContainerGap(11, Short.MAX_VALUE)
            .addGroup(panelPressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labSys)
                .addComponent(ftxtSys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ftxtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labDia)
                .addComponent(ftxtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labPulse)
                .addComponent(checkArrhythmia))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labWHO, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    panelGlucose.setBorder(javax.swing.BorderFactory.createTitledBorder("Glucose"));

    labGlucose.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    labGlucose.setText("Glucose:");

    ftxtGlucose.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
    ftxtGlucose.setToolTipText("Glucose");

    checkEmptyStomach.setText("Empty stomach:");
    checkEmptyStomach.setToolTipText("Measure taken on empty stomach");
    checkEmptyStomach.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    javax.swing.GroupLayout panelGlucoseLayout = new javax.swing.GroupLayout(panelGlucose);
    panelGlucose.setLayout(panelGlucoseLayout);
    panelGlucoseLayout.setHorizontalGroup(
        panelGlucoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelGlucoseLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(labGlucose)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ftxtGlucose, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(checkEmptyStomach)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    panelGlucoseLayout.setVerticalGroup(
        panelGlucoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelGlucoseLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelGlucoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(ftxtGlucose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labGlucose)
                .addComponent(checkEmptyStomach))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panelComment.setBorder(javax.swing.BorderFactory.createTitledBorder("Comment"));

    areaComment.setColumns(20);
    areaComment.setRows(5);
    scrollComment.setViewportView(areaComment);

    javax.swing.GroupLayout panelCommentLayout = new javax.swing.GroupLayout(panelComment);
    panelComment.setLayout(panelCommentLayout);
    panelCommentLayout.setHorizontalGroup(
        panelCommentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelCommentLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(scrollComment)
            .addContainerGap())
    );
    panelCommentLayout.setVerticalGroup(
        panelCommentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(scrollComment)
    );

    javax.swing.GroupLayout measureDataPanelLayout = new javax.swing.GroupLayout(measureDataPanel);
    measureDataPanel.setLayout(measureDataPanelLayout);
    measureDataPanelLayout.setHorizontalGroup(
        measureDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(measureDataPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(measureDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(panelPressure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelMesTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelGlucose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelComment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    measureDataPanelLayout.setVerticalGroup(
        measureDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(measureDataPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelMesTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panelPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(17, 17, 17)
            .addComponent(panelGlucose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panelComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    measureToolsPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

    butSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bmr_main_package/Icons/save-icon.png"))); // NOI18N
    butSave.setToolTipText("Save data");
    butSave.addActionListener(new java.awt.event.ActionListener()
    {
        public void actionPerformed(java.awt.event.ActionEvent evt)
        {
            butSaveActionPerformed(evt);
        }
    });

    butCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bmr_main_package/Icons/Actions-button-cancel-icon.png"))); // NOI18N
    butCancel.setToolTipText("Cancel data");
    butCancel.addActionListener(new java.awt.event.ActionListener()
    {
        public void actionPerformed(java.awt.event.ActionEvent evt)
        {
            butCancelActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout measureToolsPanelLayout = new javax.swing.GroupLayout(measureToolsPanel);
    measureToolsPanel.setLayout(measureToolsPanelLayout);
    measureToolsPanelLayout.setHorizontalGroup(
        measureToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(measureToolsPanelLayout.createSequentialGroup()
            .addGap(133, 133, 133)
            .addComponent(butSave)
            .addGap(32, 32, 32)
            .addComponent(butCancel)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    measureToolsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {butCancel, butSave});

    measureToolsPanelLayout.setVerticalGroup(
        measureToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(measureToolsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(measureToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(butCancel, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(butSave))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    measureToolsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {butCancel, butSave});

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(measureDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(measureToolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(measureDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(measureToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents


    private void butSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butSaveActionPerformed
    {//GEN-HEADEREND:event_butSaveActionPerformed
        MeasuresToScreen(CommonDefs.FIELDS_COPY.FIELDS_TO_DATA);
        this.dataSaved = true;
        this.dispose();
    }//GEN-LAST:event_butSaveActionPerformed

    private void butCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butCancelActionPerformed
    {//GEN-HEADEREND:event_butCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_butCancelActionPerformed

    private void ftxtSysFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_ftxtSysFocusLost
    {//GEN-HEADEREND:event_ftxtSysFocusLost
        displayCategoryWHO(this.ftxtSys.getText(), this.ftxtDia.getText());
    }//GEN-LAST:event_ftxtSysFocusLost

    private void ftxtDiaFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_ftxtDiaFocusLost
    {//GEN-HEADEREND:event_ftxtDiaFocusLost
        displayCategoryWHO(this.ftxtSys.getText(), this.ftxtDia.getText());
    }//GEN-LAST:event_ftxtDiaFocusLost



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaComment;
    private javax.swing.JButton butCancel;
    private javax.swing.JButton butSave;
    private javax.swing.JCheckBox checkArrhythmia;
    private javax.swing.JCheckBox checkEmptyStomach;
    private datechooser.beans.DateChooserCombo comboDate;
    private javax.swing.JFormattedTextField ftxtDia;
    private javax.swing.JFormattedTextField ftxtGlucose;
    private javax.swing.JFormattedTextField ftxtHour;
    private javax.swing.JFormattedTextField ftxtPulse;
    private javax.swing.JFormattedTextField ftxtSys;
    private javax.swing.JLabel labDate;
    private javax.swing.JLabel labDia;
    private javax.swing.JLabel labGlucose;
    private javax.swing.JLabel labHour;
    private javax.swing.JLabel labPulse;
    private javax.swing.JLabel labSys;
    private javax.swing.JLabel labWHO;
    private javax.swing.JPanel measureDataPanel;
    private javax.swing.JPanel measureToolsPanel;
    private javax.swing.JPanel panelComment;
    private javax.swing.JPanel panelGlucose;
    private javax.swing.JPanel panelMesTime;
    private javax.swing.JPanel panelPressure;
    private javax.swing.JScrollPane scrollComment;
    // End of variables declaration//GEN-END:variables
}
